@model TBAM.Models.TestBatchListModel

@{
    ViewData["Title"] = "Test Batch List";
    Layout = "_Layout";
    string Role = (string)Context.Session.GetString("userRole");
}

<div class="container-fluid" style="margin-top: 20px;">
    <div class="card">
        <div class="card-header text-center">
            <h2 class="mb-0">@ViewData["Title"]</h2>
        </div>
        <div class="card-body">
            @if (@TempData["Message"] != null)
            {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    @TempData["Message"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
            <table id="lineItemsTable" class="table table-bordered mt-3" style="width: 100%; table-layout: fixed;">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Sr No.</th>
                        <th scope="col">Ref No.</th>
                        <th scope="col">Purpose of Testing</th>
                        <th scope="col">Plant</th>
                        <th scope="col">Status</th>
                        @if(Model.Filter != "Completed")
                        {
                            <th scope="col">Action</th>

                        }
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>

            <!-- Modal -->
            <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        @if(Role == "Manufacturing Head")
                        {
                            <div class="modal-body">
                            @using (Html.BeginForm("ConfirmSendForApproval", "Dashboard", FormMethod.Post))
                            {
                                <input type="hidden" id="refNo" name="RefNo" />
                                <div class="alert alert-warning">
                                    Are you sure you want to complete this batch?
                                </div>
                                <button type="submit" class="btn btn-primary">Yes, complete</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">No, cancel</button>
                            }
                            </div>
                        }
                        else
                        {
                            <div class="modal-body">
                            @using (Html.BeginForm("ConfirmSendForApproval", "Dashboard", FormMethod.Post))
                            {
                                <input type="hidden" id="refNo" name="RefNo" />
                                <div class="alert alert-warning">
                                    Are you sure you want to send this batch for approval?
                                </div>
                                <button type="submit" class="btn btn-primary">Yes, send for approval</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">No, cancel</button>
                            }
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .main-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9; /* add a light gray background color */
    }

    .card {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* add a subtle box shadow */
    }

    .card-header {
        background-color: #337ab7; /* add a blue background color to the card header */
        color: #ffffff; /* add white text color to the card header */
    }

    .card-body {
        padding: 20px; /* add some padding to the card body */
    }

        /* style the table */
    #lineItemsTable {
        width: 100%;
        border-collapse: collapse;
    }

    #lineItemsTable th, #lineItemsTable td{
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
        align-content: center;
    }

    #lineItemsTable th {
        background-color: #f0f0f0;
    }
    #lineItemsTable td input{text-align: center;}
</style>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript">
    $(document).ready(async function () {
        var TestBatchListCount = 1;
        var ListOfBatch = [];
        var filter = "@Model.Filter"=="" ? "Pending" : "@Model.Filter" ; 

        @for (int i = 0; i < Model.ListOfBatch.Count; i++)
        {
            @:ListOfBatch[@i] = @Json.Serialize(Model.ListOfBatch[i]);
        }

        console.log("ListOfBatch.length ", ListOfBatch.length)

        for (var i = 0; i < ListOfBatch.length; i++) {
            console.log("ListOfBatch[i].RefNo ", JSON.stringify(ListOfBatch[i]))
            var serialNo = ListOfBatch.length - i;
            var editUrl = '@Url.Action("EditTestBatch", "Dashboard")';
            var viewUrl = '@Url.Action("EditTestBatch", "Dashboard")'; // new URL for view

            var sendForApprovalUrl = '@Url.Action("SendForApproval", "Dashboard")';
            
            var sendBackUrl = '@Url.Action("SendBack", "Dashboard")';


            $('<tr id="lineItemRow' + i + '"><td style="width:10px;">' +
                '  <label for="html">' +serialNo+ '</label><br>' +
                '</td><td>' +
                '<input type="text" name="Model.PurposesOfTesting" value="' + ListOfBatch[i].refNo + '" class="form-control-plaintext" readonly />  ' +
                '</td><td>' +
                '<input type="text" name="Model.PurposesOfTesting" value="' + ListOfBatch[i].purposesOfTesting + '" class="form-control-plaintext" readonly />  ' +
                '</td><td>' +
                '<input type="text" name="Model.Plant" value="' + ListOfBatch[i].plant + '" class="form-control-plaintext" readonly />  ' +
                '</td><td>' +
                '<input type="text" name="Model.Status" value= "'+filter+'" class="form-control-plaintext" readonly />  ' +
                '</td>' +
                ("@Role" == "Initiator" && "@Model.Filter" != "Completed"?
                '<td><a href="' + editUrl + '?RefNo=' + ListOfBatch[i].refNo + '" class="btn btn-sm btn-primary" title="Edit this batch">Edit</a></td>' :
                ("@Role" != "Initiator" && "@Model.Filter" != "Completed"?
                '<td><a href="' + viewUrl + '?RefNo=' + ListOfBatch[i].refNo + '" class="btn btn-sm btn-info" title="View this batch" >View</a></td>':'') )+
                '&nbsp;&nbsp;' +
                
                '</tr>').prependTo('#lineItemsTable tbody');
            TestBatchListCount++;
        }
        $(document).on('click', 'a.btn.btn-sm.btn-warning', function (e) {
    e.preventDefault();
    var refNo = $(this).attr('href').split('?RefNo=')[1];
    $('#refNo').val(refNo);
    $('#confirmationModal').modal('show');
});
    $(document).on('click', '[data-dismiss="modal"]', function (e) {
        e.preventDefault();
        $(this).closest('.modal').modal('hide');
    });
    });
</script>